'use strict';var cov_2dbvd6fdag=function(){var path='/home/m/Desktop/platzi/courses/node/avance/realTimeNodeJS/realTimeNodeJS-db/index.js',hash='a46b36c96e477f2c68ff908d206d0c447100bb6c',Function=function(){}.constructor,global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/m/Desktop/platzi/courses/node/avance/realTimeNodeJS/realTimeNodeJS-db/index.js',statementMap:{'0':{start:{line:3,column:22},end:{line:3,column:41}},'1':{start:{line:4,column:24},end:{line:4,column:49}},'2':{start:{line:5,column:25},end:{line:5,column:51}},'3':{start:{line:6,column:19},end:{line:6,column:41}},'4':{start:{line:7,column:20},end:{line:7,column:43}},'5':{start:{line:8,column:17},end:{line:8,column:36}},'6':{start:{line:10,column:0},end:{line:43,column:1}},'7':{start:{line:11,column:2},end:{line:21,column:4}},'8':{start:{line:23,column:20},end:{line:23,column:41}},'9':{start:{line:24,column:21},end:{line:24,column:44}},'10':{start:{line:25,column:22},end:{line:25,column:46}},'11':{start:{line:27,column:2},end:{line:27,column:33}},'12':{start:{line:28,column:2},end:{line:28,column:35}},'13':{start:{line:30,column:2},end:{line:30,column:32}},'14':{start:{line:32,column:2},end:{line:34,column:3}},'15':{start:{line:33,column:4},end:{line:33,column:41}},'16':{start:{line:36,column:16},end:{line:36,column:38}},'17':{start:{line:37,column:17},end:{line:37,column:53}},'18':{start:{line:39,column:2},end:{line:42,column:3}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:10,column:17},end:{line:10,column:18}},loc:{start:{line:10,column:41},end:{line:43,column:1}},line:10}},branchMap:{'0':{loc:{start:{line:32,column:2},end:{line:34,column:3}},type:'if',locations:[{start:{line:32,column:2},end:{line:34,column:3}},{start:{line:32,column:2},end:{line:34,column:3}}],line:32}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0},f:{'0':0},b:{'0':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const setupDatabase=(cov_2dbvd6fdag.s[0]++,require('./lib/db'));const setupAgentModel=(cov_2dbvd6fdag.s[1]++,require('./models/agent'));const setupMetricModel=(cov_2dbvd6fdag.s[2]++,require('./models/metric'));const setupAgent=(cov_2dbvd6fdag.s[3]++,require('./lib/agent'));const setupMetric=(cov_2dbvd6fdag.s[4]++,require('./lib/metric'));const defaults=(cov_2dbvd6fdag.s[5]++,require('defaults'));cov_2dbvd6fdag.s[6]++;module.exports=async function(config){cov_2dbvd6fdag.f[0]++;cov_2dbvd6fdag.s[7]++;config=defaults(config,{dialect:'sqlite',pool:{max:10,min:0,idle:10000},query:{raw:true}});const sequelize=(cov_2dbvd6fdag.s[8]++,setupDatabase(config));const AgentModel=(cov_2dbvd6fdag.s[9]++,setupAgentModel(config));const MetricModel=(cov_2dbvd6fdag.s[10]++,setupMetricModel(config));cov_2dbvd6fdag.s[11]++;AgentModel.hasMany(MetricModel);cov_2dbvd6fdag.s[12]++;MetricModel.belongsTo(AgentModel);cov_2dbvd6fdag.s[13]++;await sequelize.authenticate();cov_2dbvd6fdag.s[14]++;if(config.setup){cov_2dbvd6fdag.b[0][0]++;cov_2dbvd6fdag.s[15]++;await sequelize.sync({force:true});}else{cov_2dbvd6fdag.b[0][1]++;}const Agent=(cov_2dbvd6fdag.s[16]++,setupAgent(AgentModel));const Metric=(cov_2dbvd6fdag.s[17]++,setupMetric(MetricModel,AgentModel));cov_2dbvd6fdag.s[18]++;return{Agent,Metric};};