{"version":3,"sources":["agent-tests.js"],"names":["test","require","proxyquire","config","loggin","MetricStub","belongsTo","AgentStub","db","beforeEach","hasMany","setupDatabse","t","truthy","Agent"],"mappings":"AAAA;;;;;AAEA,MAAMA,OAAOC,QAAQ,KAAR,CAAb;AACA,MAAMC,aAAaD,QAAQ,YAAR,CAAnB;;AAEA,IAAIE,SAAS;AACTC,YAAQ,YAAW,CAAE;AADZ,CAAb;;AAIA,IAAIC,aAAa;AAChBC,eAAW,YAAW,CAAE;AADR,CAAjB;;AAIA,IAAIC,YAAY,IAAhB;AACA,IAAIC,KAAK,IAAT;;AAEAR,KAAKS,UAAL,CAAgB,YAAY;AACxBF,gBAAY;AACRG,iBAAS,YAAY,CAAE;AADf,KAAZ;;AAIA,UAAMC,eAAeT,WAAW,KAAX,EAAkB;AACnC,0BAAkB,MAAMK,SADW;AAEnC,2BAAmB,MAAMF;AAFU,KAAlB,CAArB;AAIAG,SAAK,MAAMG,aAAaR,MAAb,CAAX;AACH,CAVD;;AAYAH,KAAK,OAAL,EAAcY,KAAK;AAAA;;AACfA,MAAEC,MAAF,uBAAS,qCAAGC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAmB,4BAAnB;AACH,CAFD","file":"agent-tests.js","sourcesContent":["'use strict'\n\nconst test = require('ava')\nconst proxyquire = require('proxyquire')\n\nlet config = {\n    loggin: function() {}\n}\n\nlet MetricStub = {\n belongsTo: function() {} \n}\n\nlet AgentStub = null\nlet db = null\n\ntest.beforeEach(async () => {\n    AgentStub = {\n        hasMany: function () {}\n    }\n\n    const setupDatabse = proxyquire('../', {\n        './models/agent': () => AgentStub,\n        './models/metric': () => MetricStub\n    })\n    db = await setupDatabse(config)\n})\n\ntest('Agent', t => {\n    t.truthy(db.Agent, 'Agent service should exist')\n})"]}